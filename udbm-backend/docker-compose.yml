version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15
    container_name: udbm-postgres
    environment:
      POSTGRES_DB: udbm_db
      POSTGRES_USER: udbm_user
      POSTGRES_PASSWORD: udbm_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./performance_tuning_tables.sql:/docker-entrypoint-initdb.d/20_performance_tuning_tables.sql
      - ./sample_performance_data.sql:/docker-entrypoint-initdb.d/30_sample_performance_data.sql
    networks:
      - udbm-network

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: udbm-mysql
    environment:
      MYSQL_ROOT_PASSWORD: udbm_root_password
      MYSQL_DATABASE: udbm_mysql_demo
      MYSQL_USER: udbm_mysql_user
      MYSQL_PASSWORD: udbm_mysql_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init_mysql.sql:/docker-entrypoint-initdb.d/10_init_mysql.sql
      - ./performance_tuning_tables_mysql.sql:/docker-entrypoint-initdb.d/20_performance_tuning_tables_mysql.sql
      - ./sample_mysql_data.sql:/docker-entrypoint-initdb.d/30_sample_mysql_data.sql
      - ./sample_performance_data_mysql.sql:/docker-entrypoint-initdb.d/40_sample_performance_data_mysql.sql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - udbm-network

  # OceanBase数据库 (真正的OceanBase社区版)
  oceanbase:
    image: oceanbase/oceanbase-ce:latest
    container_name: udbm-oceanbase
    environment:
      - OB_ROOT_PASSWORD=udbm_ob_root_password
      - OB_CLUSTER_NAME=obcluster
      - OB_TENANT_NAME=test
    ports:
      - "2881:2881"  # OceanBase默认端口
      - "2882:2882"  # OceanBase RPC端口
    volumes:
      - oceanbase_data:/root/ob
    networks:
      - udbm-network
    # OceanBase需要特权模式和一些系统参数
    privileged: true
    # 设置内存限制，OceanBase需要较多内存
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: udbm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - udbm-network

  # UDBM后端API
  api:
    build: .
    container_name: udbm-api
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=udbm_user
      - POSTGRES_PASSWORD=udbm_password
      - POSTGRES_DB=udbm_db
      - REDIS_HOST=redis
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/__pycache__
    networks:
      - udbm-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload


volumes:
  postgres_data:
  mysql_data:
  oceanbase_data:
  redis_data:

networks:
  udbm-network:
    driver: bridge
